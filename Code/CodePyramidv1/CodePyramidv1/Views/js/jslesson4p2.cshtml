
@{
    ViewData["Title"] = "More Logical Operators";
}

<h2>More Logical Operators</h2>

<p>
    Next is the OR operator, which is true if one of the two inputs is true.  The OR operator is represented with two characters called pipes, and it looks like this: ||.  The pipe key isn’t used very often, but is usually on your keyboard next to the “Enter” key.

    Here are a few examples of the OR operator:
</p>
<img src="~/images/js14.png" />
<p>
    Along with the OR operator, we have something called the AND operator.  The AND operator checks to see if two things are both true.  If they aren’t both true, then AND returns false.  If they are both true, then AND returns true. The AND operator looks like this: &&.

    Here are a few examples using the AND operator:
</p>

<img src="~/images/js15.png" />

<p>
    The last operator is the NOT operator.  The NOT operator takes the truth value of whatever it’s used on, and flips it.  If it’s used on something that’s true, then it returns false.  If it’s used on something false, then it returns true.  NOT is represented using an !.

    Here are a few examples using the NOT operator.
</p>
<img src="~/images/js16.png" />
<p>
    You can also combine all of these operators.  They will follow a certain order of operations, but it’s good practice to use parentheses to make sure that they all run the way that they’re supposed to.

    Here are a few examples of using compound logical expressions:
</p>

<img src="~/images/js17.png" />


<div class="row">
    <div class="col-xs-6 col-md-10">
        <a class="btn btn-success btn-primary-spacing app-brand" asp-controller="js" asp-action="jslesson4p1"><i class="fa fa-arrow-left" aria-hidden="true"></i> Back</a>
    </div>
    <div class="col-xs-6 col-md-2">
        <a class="btn btn-success btn-primary-spacing app-brand" asp-controller="js" asp-action="jslesson4p3">Next <i class="fa fa-arrow-right" aria-hidden="true"></i></a>
    </div>
</div>